[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/mass.js",
    "content": "  \r\n/** \r\n * Parsing and formatting mass units.\r\n *\r\n * @author Tyler Vigario (MeekLogic)\r\n * @license GPL-3.0-only\r\n * @version 1.0.0\r\n */\r\n\r\n/**\r\n * Class for working with string representations of mass.\r\n */\r\nexport default class Mass\r\n{\r\n    /**\r\n     * Creates an instance of Mass.\r\n     * \r\n     * @param {object} [units = null] - Object containing mass unit definitions.\r\n     */\r\n    constructor(units = null)\r\n    {\r\n        if (units === null) {\r\n            units = [{\r\n                name: 'ton',\r\n                value: 2000,\r\n                display: {\r\n                    singular: 'ton',\r\n                    plural: 'tons',\r\n                    rounding: 2,\r\n                    exclusive: true\r\n                },\r\n                signifiers: [\r\n                    't',\r\n                    'ton',\r\n                    'tons'\r\n                ]\r\n            },{\r\n                name: 'hundredweight',\r\n                value: 100,\r\n                signifiers: [\r\n                    'cwt',\r\n                    'hundredweight'\r\n                ]\r\n            },{\r\n                name: 'quarter',\r\n                value: 25,\r\n                signifiers: [\r\n                    'qr',\r\n                    'qtr',\r\n                    'quarter',\r\n                    'quarters'\r\n                ]\r\n            },{\r\n                name: 'pound',\r\n                value: 1,\r\n                display: {\r\n                    singular: 'lb',\r\n                    plural: 'lbs'\r\n                },\r\n                signifiers: [\r\n                    'lb',\r\n                    'lbs',\r\n                    'pound',\r\n                    'pounds'\r\n                ]\r\n            },{\r\n                name: 'ounce',\r\n                value: 0.0625,\r\n                display: 'oz',\r\n                signifiers: [\r\n                    'oz',\r\n                    'ounce',\r\n                    'ounces'\r\n                ]\r\n            },{\r\n                name: 'dram',\r\n                value: 0.00390625,\r\n                signifiers: [\r\n                    'dr',\r\n                    'dram',\r\n                    'drams'\r\n                ]\r\n            },{\r\n                name: 'grain',\r\n                value: 1.4285714285714285714285714285714e-4,\r\n                signifiers: [\r\n                    'gr',\r\n                    'grain',\r\n                    'grains'\r\n                ]\r\n            }];\r\n        } else if (typeof units !== 'object') {\r\n            throw new Error('Parameter \"units\" must be of type \"object\".');\r\n        }\r\n\r\n        this.Units = units;\r\n    }\r\n\r\n    /**\r\n     * Parse variable for Mass.\r\n     * \r\n     * @param {string} text - String to parse for mass.\r\n     * @returns {(number|false)} Returns mass as it's base unit, if an invalid string for mass or any value is negative, false.\r\n     */\r\n    parse(text)\r\n    {\r\n        // Validate text parameter\r\n        if (typeof text !== 'string') {\r\n            throw new Error('Parameter \"text\" must be of type \"string\".');\r\n        }\r\n\r\n        // Remove possible case sensitivity\r\n        text = text.toLowerCase();\r\n\r\n        // Remove non alphanumeric characters except periods\r\n        text = text.replace(/[^0-9a-z.-]/g, '');\r\n\r\n        // Is string empty?\r\n        if (text.length === 0) {\r\n            return false;\r\n        }\r\n\r\n        // Linear char parsing\r\n        let value = '';\r\n        let signifier = '';\r\n        let unit;\r\n        let total = 0;\r\n\r\n        // Loop through each character of string\r\n        for (let i = 0; i < text.length; i++) {\r\n            // Get current char\r\n            const char = text.charAt(i);\r\n\r\n            // Check for alphabet letter (a-z,0-9|a-z,0-9|...) [comma = separator between value and signifier, | = separator between pairs]\r\n            if (char.match(/[a-z]/)) {\r\n                // Catch the case where they supply text prior to the value\r\n                if (value.length === 0) {\r\n                    return false;\r\n                }\r\n\r\n                signifier += char;\r\n            } else {\r\n                // Check if this is next unit pair (i.e. value,signifier|value,signifier|...)\r\n                if (signifier.length > 0) {\r\n                    // Convert to string to number\r\n                    let v = parseFloat(value);\r\n\r\n                    // Mass cannot be negative\r\n                    if (v < 0) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Lookup unit signifier\r\n                    unit = this.lookup(signifier);\r\n\r\n                    // Does signifier not match?\r\n                    if (unit === false) {\r\n                        // If we cannot reliably match this signifier to a unit\r\n                        return false;\r\n                    }\r\n\r\n                    // Convert to base unit value and add to total\r\n                    total += v * unit.value;\r\n\r\n                    // Reset storage variables\r\n                    value = '';\r\n                    signifier = '';\r\n                }\r\n\r\n                value += char;\r\n            }\r\n        }\r\n\r\n        // Convert to string to number\r\n        let v = parseFloat(value);\r\n\r\n        // Mass cannot be negative\r\n        if (v < 0) {\r\n            return false;\r\n        }\r\n\r\n        // Lookup unit signifier\r\n        unit = this.lookup(signifier);\r\n\r\n        // Does signifier not match?\r\n        if (unit === false) {\r\n            // If we cannot reliably match this signifier to a unit\r\n            return false;\r\n        }\r\n\r\n        // Convert to base unit value and add to total\r\n        total += value * unit.value;\r\n\r\n        // Return total mass (as base unit)\r\n        return total;\r\n    }\r\n\r\n    /**\r\n     * Format mass as text.\r\n     * \r\n     * @param {number} value - Value to format (must be a positive number).\r\n     * @param {(number|string)} [unitValue = 1] - Value of unit or string mass unit signifier for lookup.\r\n     * @param {(boolean|number)} [spaces = true] - Truthy values will add space between value and signifier.\r\n     * @returns {(string|false)} Formatted mass string or, if value is negative or unit signifier lookup fails, false.\r\n     */\r\n    format(value, unitValue = 1, spaces = true)\r\n    {\r\n        let formatted = '';\r\n\r\n        // Validate value parameter\r\n        if (typeof value !== 'number') {\r\n            throw new Error('Parameter \"value\" must be of type \"number\".');\r\n        }\r\n\r\n        // Accepts any positive number\r\n        if (value < 0) {\r\n            return false;\r\n        }\r\n        \r\n        // Did they supply custom unit ratio or signifier?\r\n        if (unitValue !== 1) {\r\n            if (typeof unitValue === 'number') {\r\n                // Validate number\r\n                if (unitValue < 0) {\r\n                    throw new Error('Parameter \"unitValue\" cannot be a negative number.');\r\n                }\r\n            } else if (typeof unitValue === 'string') {\r\n                // Perform lookup using signifier\r\n                unitValue = this.lookup(unitValue);\r\n\r\n                // Validate Unit lookup\r\n                if (unitValue === false) {\r\n                    return false;\r\n                }\r\n\r\n                // We want unit value\r\n                unitValue = unitValue.value;\r\n            } else {\r\n                throw new Error('Parameter \"unitValue\" must be of type \"number\" or \"string\".');\r\n            }\r\n\r\n            // Convert value to base unit value\r\n            value = value * unitValue;\r\n        }\r\n\r\n        // Loop through Units\r\n        for (let unit of this.Units) {\r\n            // Check if Unit is displaying and value is greater than unit value\r\n            if (unit.display && value >= unit.value) {\r\n                // Calculate quantity of unit\r\n                let q = value / unit.value;\r\n\r\n                // Exclusive means it will display the whole value under its sole unit\r\n                // Here we check to make sure it isn't exclusive so we can remove the change from value and make it whole\r\n                if (!unit.display.exclusive) {\r\n                    // Whole unit quantity\r\n                    q = Math.floor(q);\r\n\r\n                    // Subtract change from total\r\n                    value -= q * unit.value;\r\n                }\r\n\r\n                // Add space if text has content already\r\n                if (formatted.length > 0) {\r\n                    formatted += ' ';\r\n                }\r\n\r\n                // Add formatted value\r\n                formatted += q.toFixed(unit.display.rounding ? unit.display.rounding : 0);\r\n\r\n                // Add spaces (if applicable)\r\n                if (spaces) {\r\n                    formatted += ' ';\r\n                }\r\n\r\n                // Add unit signifier\r\n                if (typeof unit.display === 'object') {\r\n                    formatted += (q === 1 ? unit.display.singular : unit.display.plural);\r\n                } else {\r\n                    formatted += unit.display;\r\n                }\r\n\r\n                // Is unit exclusive or is there no longer any value to format?\r\n                if (unit.display.exclusive || value === 0) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return formatted;\r\n    }\r\n\r\n    /**\r\n     * Lookup string with signifier returning matching Unit.\r\n     * \r\n     * @param {string} signifier - Mass unit signifier string for lookup.\r\n     * @return {(object|false)} Matching Unit object, if found, otherwise false.\r\n     */\r\n    lookup(signifier)\r\n    {\r\n        // Validate signifier parameter type\r\n        if (typeof signifier !== 'string') {\r\n            throw new Error('Parameter \"signifier\" must be of type \"string\".');\r\n        }\r\n\r\n        // Loop through each Unit\r\n        for (let unit of this.Units) {\r\n            // Check if signifier matches Unit\r\n            if (unit.signifiers.includes(signifier)) {\r\n                // Return unit\r\n                return unit;\r\n            }\r\n        }\r\n\r\n        // No match found\r\n        return false;\r\n    }\r\n}",
    "static": true,
    "longname": "D:/Users/Tyler/Documents/Projects/Mass.js/src/mass.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "Mass",
    "memberof": "src/mass.js",
    "static": true,
    "longname": "src/mass.js~Mass",
    "access": "public",
    "export": true,
    "importPath": "mass.js/src/mass.js",
    "importStyle": "Mass",
    "description": "Class for working with string representations of mass.",
    "lineNumber": 13,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/mass.js~Mass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mass.js~Mass#constructor",
    "access": "public",
    "description": "Creates an instance of Mass.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " null",
        "defaultRaw": null,
        "name": "units",
        "description": "Object containing mass unit definitions."
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "Units",
    "memberof": "src/mass.js~Mass",
    "static": false,
    "longname": "src/mass.js~Mass#Units",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "parse",
    "memberof": "src/mass.js~Mass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mass.js~Mass#parse",
    "access": "public",
    "description": "Parse variable for Mass.",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{(number|false)} Returns mass as it's base unit, if an invalid string for mass or any value is negative, false."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "String to parse for mass."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number",
        "false"
      ],
      "spread": false,
      "description": "Returns mass as it's base unit, if an invalid string for mass or any value is negative, false."
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "format",
    "memberof": "src/mass.js~Mass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mass.js~Mass#format",
    "access": "public",
    "description": "Format mass as text.",
    "lineNumber": 206,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{(string|false)} Formatted mass string or, if value is negative or unit signifier lookup fails, false."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Value to format (must be a positive number)."
      },
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1",
        "defaultRaw": 1,
        "name": "unitValue",
        "description": "Value of unit or string mass unit signifier for lookup."
      },
      {
        "nullable": null,
        "types": [
          "boolean",
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " true",
        "defaultRaw": true,
        "name": "spaces",
        "description": "Truthy values will add space between value and signifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "false"
      ],
      "spread": false,
      "description": "Formatted mass string or, if value is negative or unit signifier lookup fails, false."
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "lookup",
    "memberof": "src/mass.js~Mass",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mass.js~Mass#lookup",
    "access": "public",
    "description": "Lookup string with signifier returning matching Unit.",
    "lineNumber": 299,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "signifier",
        "description": "Mass unit signifier string for lookup."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "false"
      ],
      "spread": false,
      "description": "Matching Unit object, if found, otherwise false."
    }
  },
  {
    "kind": "index",
    "content": "[![BCH compliance](https://bettercodehub.com/edge/badge/MeekLogic/Mass.js?branch=master)](https://bettercodehub.com/) [![Build Status](https://travis-ci.com/MeekLogic/Mass.js.svg?branch=master)](https://travis-ci.com/MeekLogic/Mass.js) [![Coverage Status](https://coveralls.io/repos/github/MeekLogic/Mass.js/badge.svg?branch=master)](https://coveralls.io/github/MeekLogic/Mass.js?branch=master) [![Depfu](https://badges.depfu.com/badges/0bab67be6f5f0504604c811ca37b2ce5/overview.svg)](https://depfu.com/github/MeekLogic/Mass.js?project_id=9832)\r\n\r\nMass.js\r\n=========\r\nJavaScript library for parsing and formatting mass units.\r\n\r\n**[Documentation](https://meeklogic.github.io/Mass.js/)**\r\n\r\nInstall\r\n-------\r\n```javascript\r\nnpm install Mass.js\r\n```\r\n\r\nUsage\r\n-----\r\n**ES6**\r\n```javascript\r\nimport {Mass as mass} from 'Mass.js/src/mass';\r\nvar Mass = new mass();\r\n```\r\n\r\n**CommonJS**\r\n```javascript\r\nvar mass = require('Mass.js');\r\nvar Mass = new mass();\r\n```\r\n\r\nExample\r\n-------\r\n```javascript\r\n// Parse string for ounces\r\nlet pounds = Mass.parse('5lbs  4 oz');\r\n\r\nconsole.log(pounds); // 5.25\r\n\r\n// Add 12 ounces\r\npounds += (12 / 16);\r\n\r\nconsole.log(pounds); // 6\r\n\r\n// Verify total is 90 ounces\r\nif (pounds === 6) {\r\n    // Format total for human-readable string\r\n    console.log(Mass.format(pounds)); // \"6 lbs\"\r\n} else {\r\n    console.error('Did we forget to run our tests?');\r\n}\r\n```\r\n",
    "longname": "D:\\Users\\Tyler\\Documents\\Projects\\Mass.js\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"mass.js\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"JavaScript library for parsing and formatting mass units.\",\r\n  \"homepage\": \"https://meeklogic.github.io/Mass.js/\",\r\n  \"main\": \"./dist/mass.min.js\",\r\n  \"scripts\": {\r\n    \"build\": \"npx webpack --config webpack.config.js\",\r\n    \"lint\": \"./node_modules/.bin/eslint --config ./.eslintrc.js ./src\",\r\n    \"test\": \"npm run tests\",\r\n    \"tests\": \"node ./scripts/tests.js | tap-spec\",\r\n    \"test:coverage\": \"npm run tests:coverage\",\r\n    \"tests:coverage\": \"npx nyc npm run tests\",\r\n    \"speed\": \"npm run performance\",\r\n    \"performance\": \"node ./scripts/performance.js\",\r\n    \"doc\": \"npm run documentation\",\r\n    \"docs\": \"npm run documentation\",\r\n    \"documentation\": \"npx esdoc\",\r\n    \"example\": \"node ./scripts/example.js\"\r\n  },\r\n  \"keywords\": [\r\n    \"weight\",\r\n    \"conversion\",\r\n    \"imperial\",\r\n    \"pound\",\r\n    \"ounce\",\r\n    \"mass\"\r\n  ],\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git+https://github.com/MeekLogic/Mass.js\"\r\n  },\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/MeekLogic/Mass.js/issues\"\r\n  },\r\n  \"author\": \"MeekLogic (Tyler Vigario)\",\r\n  \"license\": \"GPL-3.0-only\",\r\n  \"devDependencies\": {\r\n    \"@babel/core\": \"^7.6.4\",\r\n    \"@babel/preset-env\": \"^7.6.3\",\r\n    \"babel-loader\": \"^8.0.6\",\r\n    \"esdoc\": \"^1.1.0\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\",\r\n    \"eslint\": \"^6.5.1\",\r\n    \"microtime\": \"^3.0.0\",\r\n    \"nyc\": \"^14.1.1\",\r\n    \"tap-spec\": \"^5.0.0\",\r\n    \"tape\": \"^4.11.0\",\r\n    \"uglifyjs-webpack-plugin\": \"^2.2.0\",\r\n    \"webpack\": \"^4.41.2\",\r\n    \"webpack-cli\": \"^3.3.9\"\r\n  },\r\n  \"dependencies\": {},\r\n  \"nyc\": {\r\n    \"include\": [\r\n      \"**/dist/mass.js\"\r\n    ]\r\n  }\r\n}\r\n",
    "longname": "D:\\Users\\Tyler\\Documents\\Projects\\Mass.js\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]