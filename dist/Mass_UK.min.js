!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?exports["mass.js"]=r():e["mass.js"]=r()}(this,function(){return(n={},o.m=t=[function(e,r,t){"use strict";function y(e){return(y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function n(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}t.d(r,"a",function(){return o});
/** 
 * Parsing and formatting mass units.
 *
 * @author Tyler Vigario (MeekLogic)
 * @license GPL-3.0-only
 * @version 1.0.1
 */
var o=function(){function r(e){if(function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,r),"object"!==y(e))throw new Error('Parameter "units" must be of type "object".');this.Units=e}return function(e,r,t){r&&n(e.prototype,r),t&&n(e,t)}(r,[{key:"parse",value:function(e){if("string"!=typeof e)throw new Error('Parameter "text" must be of type "string".');if(0===(e=(e=e.toLowerCase()).replace(/[^0-9a-z.-]/g,"")).length)return!1;for(var r,t="",n="",o=0,i=0;i<e.length;i++){var u=e.charAt(i);if(u.match(/[a-z]/)){if(0===t.length)return!1;n+=u}else{if(0<n.length){var a=parseFloat(t);if(a<0)return!1;if(void 0===(r=this.lookup(n)))return!1;o+=a*r.value,n=t=""}t+=u}}return!(parseFloat(t)<0)&&(void 0!==(r=this.lookup(n))&&(o+=t*r.value))}},{key:"format",value:function(e,r,t){var n=1<arguments.length&&void 0!==r?r:1,o=!(2<arguments.length&&void 0!==t)||t;if("number"!=typeof e)throw new Error('Parameter "value" must be of type "number".');if(e<0)return!1;if(1!==n){if("number"==typeof n){if(n<0)throw new Error('Parameter "unitValue" cannot be a negative number.')}else{if("string"!=typeof n)throw new Error('Parameter "unitValue" must be of type "number" or "string".');if(void 0===(n=this.lookup(n)))return!1;n=n.value}e*=n}var i="",u=!0,a=!1,f=void 0;try{for(var s,l=this.Units[Symbol.iterator]();!(u=(s=l.next()).done);u=!0){var c=s.value;if(c.display&&e>=c.value){var p=e/c.value;if(c.display.exclusive||(e-=(p=Math.floor(p))*c.value),0<i.length&&(i+=" "),i+=p.toFixed(c.display.rounding?c.display.rounding:0),o&&(i+=" "),"object"===y(c.display)?i+=c.display.symbol:i+=c.display,c.display.exclusive||0===e)break}}}catch(e){a=!0,f=e}finally{try{u||null==l.return||l.return()}finally{if(a)throw f}}return i}},{key:"lookup",value:function(r){if("string"!=typeof r)throw new Error('Parameter "signifier" must be of type "string".');return this.Units.find(function(e){return e.signifiers.includes(r)})}}]),r}()},,function(e,r,t){"use strict";t.r(r);var n=new(t(0).a)([{name:"ton",value:2240,display:{symbol:"t",rounding:2,exclusive:!0},signifiers:["t","ton","tons"]},{name:"hundredweight",value:112,signifiers:["cwt","hundredweight"]},{name:"quarter",value:28,signifiers:["qr","qtr","quarter","quarters"]},{name:"stone",value:14,signifiers:["st","stone","stones"]},{name:"pound",value:1,display:"lb",signifiers:["lb","lbs","pound","pounds"]},{name:"ounce",value:.0625,display:"oz",signifiers:["oz","ounce","ounces"]},{name:"dram",value:.00390625,signifiers:["dr","dram","drams","drachm","drachms"]},{name:"grain",value:.00014285714285714287,signifiers:["gr","grain","grains"]}]);
/** 
 * Entry-point containing Imperial units of mass.
 *
 * @author Tyler Vigario (MeekLogic)
 * @license GPL-3.0-only
 * @version 1.0.0
 */r.default=n}],o.c=n,o.d=function(e,r,t){o.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(r,e){if(1&e&&(r=o(r)),8&e)return r;if(4&e&&"object"==typeof r&&r&&r.__esModule)return r;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:r}),2&e&&"string"!=typeof r)for(var n in r)o.d(t,n,function(e){return r[e]}.bind(null,n));return t},o.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(r,"a",r),r},o.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},o.p="",o(o.s=2)).default;function o(e){if(n[e])return n[e].exports;var r=n[e]={i:e,l:!1,exports:{}};return t[e].call(r.exports,r,r.exports,o),r.l=!0,r.exports}var t,n});